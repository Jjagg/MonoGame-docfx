
  
  <article id="content" data-uid="Microsoft.Xna.Framework.Graphics.SetDataOptions" role="main" class="pos-rel">
    
  <h1 id="Microsoft_Xna_Framework_Graphics_SetDataOptions" data-uid="Microsoft.Xna.Framework.Graphics.SetDataOptions" class="text-break">SetDataOptions Enum
  </h1>
  <div class="api">
    <div class="class-loc">
      <h5><strong>Namespace</strong>: <a class="xref" href="Microsoft.Xna.Framework.Graphics.html">Microsoft.Xna.Framework.Graphics</a></h5>
      <h5><strong>Assembly</strong>: MonoGame.Framework.dll</h5>
    </div>
    <div class="markdown level0 summary"><p>Defines how vertex or index buffer data will be flushed during a SetData operation.</p>
</div>
    <div class="markdown level0 conceptual"></div>
    <hr>
    <h5 id="Microsoft_Xna_Framework_Graphics_SetDataOptions_syntax"><strong>Syntax</strong></h5>
    <div class="codewrapper">
      <pre><code class="lang-csharp hljs">public enum SetDataOptions : int</code></pre>
    </div>
  </div>
    <h3 id="fields">Fields
  </h3>
    <table class="table table-bordered table-striped table-condensed">
      <thead>
        <tr>
          <th>Name</th>
          <th>Description</th>
        </tr>
      <thead>
      <tbody>
        <tr>
          <td id="Microsoft_Xna_Framework_Graphics_SetDataOptions_Discard">Discard</td>
          <td><p>The SetData will discard the entire buffer. A pointer to a new memory area is returned and rendering from the previous area do not stall.</p>
</td>
        </tr>
        <tr>
          <td id="Microsoft_Xna_Framework_Graphics_SetDataOptions_None">None</td>
          <td><p>The SetData can overwrite the portions of existing data.</p>
</td>
        </tr>
        <tr>
          <td id="Microsoft_Xna_Framework_Graphics_SetDataOptions_NoOverwrite">NoOverwrite</td>
          <td><p>The SetData operation will not overwrite existing data. This allows the driver to return immediately from a SetData operation and continue rendering.</p>
</td>
        </tr>
      </tbody>
    </thead></thead></table>
  </article>
