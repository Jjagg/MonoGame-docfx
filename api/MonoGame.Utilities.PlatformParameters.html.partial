

<article id="content" data-uid="MonoGame.Utilities.PlatformParameters" role="main" class="pos-rel">
  <h1 id="MonoGame_Utilities_PlatformParameters" data-uid="MonoGame.Utilities.PlatformParameters" class="text-break">PlatformParameters Class</h1>

  <div class="api">
    <div class="markdown level0 summary"></div>
<div class="markdown level0 conceptual"></div>

  
    <div class="codewrapper">
      <pre><code class="lang-csharp hljs">public static class PlatformParameters : object</code></pre>
    </div>
  
  <div class="type-subheader inheritance">
    <div>
      <span class="pad-right10"><strong>Inheritance</strong> </span>
        <span class="level0"><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.object">Object</a></span>
        <span class="inherit-separator mg-icons">&#xe800;</span>
      <span class="level1"><span class="xref">PlatformParameters</span>
    </span></div>
  </div>
  
  
  
  
  
  
  
  



  
    <h2 id="fields">
      
  
    Fields
  
  
    </h2>
    <div>
      <table class="nameValue api-table">
          <tr>
          <td class="member"><a class="xref" href="MonoGame.Utilities.PlatformParameters.DetectWindowsArchitecture.html#MonoGame_Utilities_PlatformParameters_DetectWindowsArchitecture">DetectWindowsArchitecture</a></td>
          <td class="summary"><p>If true, MonoGame will detect the CPU architecture (x86 or x86-64) and add the &quot;./x86&quot; or &quot;./x64&quot; folder to the
native DLL resolution paths. This allows MonoGame to work with Any CPU by loading the correct dependencies at runtime.
If false, MonoGame will look for native DLLs in the executing folder, which typically is the .exe home.</p>
<p>This parameter only works on Windows and doesn&apos;t affect other platforms.</p>
</td>
          </tr>
      </table>
    </div>


  </div>
</article>
