

<article id="content" data-uid="Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData*" role="main" class="pos-rel">
  <h1 id="Microsoft_Xna_Framework_Graphics_IndexBuffer_GetData_" data-uid="Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData*" class="text-break">GetData Method</h1>

  <div class="api">
    <div class="markdown level0 summary"></div>
<div class="markdown level0 conceptual"></div>

  
  
  
  
  
  
  
  
  
  



  
    <h2 id="overloads">
      
  
  
    Overloads
  
  
    </h2>
    <div>
      <table class="nameValue api-table">
          <tr>
          <td class="member"><a class="xref" href="Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData.html#Microsoft_Xna_Framework_Graphics_IndexBuffer_GetData__1_System_Int32___0___System_Int32_System_Int32_">GetData&lt;T&gt;(Int32, T[], Int32, Int32)</a></td>
          <td class="summary"></td>
          </tr>
          <tr>
          <td class="member"><a class="xref" href="Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData.html#Microsoft_Xna_Framework_Graphics_IndexBuffer_GetData__1___0___System_Int32_System_Int32_">GetData&lt;T&gt;(T[], Int32, Int32)</a></td>
          <td class="summary"></td>
          </tr>
          <tr>
          <td class="member"><a class="xref" href="Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData.html#Microsoft_Xna_Framework_Graphics_IndexBuffer_GetData__1___0___">GetData&lt;T&gt;(T[])</a></td>
          <td class="summary"></td>
          </tr>
      </table>
    </div>

      <h2 id="Microsoft_Xna_Framework_Graphics_IndexBuffer_GetData__1_System_Int32___0___System_Int32_System_Int32_" data-uid="Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData``1(System.Int32,``0[],System.Int32,System.Int32)" class="text-break">.IndexBuffer.GetData&lt;T&gt;(Int32, T[], Int32, Int32) Method</h2>
    <div class="markdown level0 summary"></div>
    <div class="markdown level0 conceptual"></div>
    
      
        <div class="codewrapper">
          <pre><code class="lang-csharp hljs">public void GetData&lt;T&gt;(int offsetInBytes, T[] data, int startIndex, int elementCount)

    where T : struct</code></pre>
        </div>
      
      
      
      
      
      <div class="type-subheader">
        <strong>Type Parameters</strong>
        <table class="">
            <tr>
              <td><span class="parametername">T</span></td>
              <td></td>
            </tr>
        </table>
      </div>
      
      <div class="type-subheader">
        <strong>Parameters</strong>
        <table class="">
            <tr>
              <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.int32">Int32</a></td>
              <td><span class="parametername">offsetInBytes</span></td>
              <td></td>
            </tr>
            <tr>
              <td>T[]</td>
              <td><span class="parametername">data</span></td>
              <td></td>
            </tr>
            <tr>
              <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.int32">Int32</a></td>
              <td><span class="parametername">startIndex</span></td>
              <td></td>
            </tr>
            <tr>
              <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.int32">Int32</a></td>
              <td><span class="parametername">elementCount</span></td>
              <td></td>
            </tr>
        </table>
      </div>
      
      
      
    
    
    
    
    
      <h2 id="Microsoft_Xna_Framework_Graphics_IndexBuffer_GetData__1___0___System_Int32_System_Int32_" data-uid="Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData``1(``0[],System.Int32,System.Int32)" class="text-break">.IndexBuffer.GetData&lt;T&gt;(T[], Int32, Int32) Method</h2>
    <div class="markdown level0 summary"></div>
    <div class="markdown level0 conceptual"></div>
    
      
        <div class="codewrapper">
          <pre><code class="lang-csharp hljs">public void GetData&lt;T&gt;(T[] data, int startIndex, int elementCount)

    where T : struct</code></pre>
        </div>
      
      
      
      
      
      <div class="type-subheader">
        <strong>Type Parameters</strong>
        <table class="">
            <tr>
              <td><span class="parametername">T</span></td>
              <td></td>
            </tr>
        </table>
      </div>
      
      <div class="type-subheader">
        <strong>Parameters</strong>
        <table class="">
            <tr>
              <td>T[]</td>
              <td><span class="parametername">data</span></td>
              <td></td>
            </tr>
            <tr>
              <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.int32">Int32</a></td>
              <td><span class="parametername">startIndex</span></td>
              <td></td>
            </tr>
            <tr>
              <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.int32">Int32</a></td>
              <td><span class="parametername">elementCount</span></td>
              <td></td>
            </tr>
        </table>
      </div>
      
      
      
    
    
    
    
    
      <h2 id="Microsoft_Xna_Framework_Graphics_IndexBuffer_GetData__1___0___" data-uid="Microsoft.Xna.Framework.Graphics.IndexBuffer.GetData``1(``0[])" class="text-break">.IndexBuffer.GetData&lt;T&gt;(T[]) Method</h2>
    <div class="markdown level0 summary"></div>
    <div class="markdown level0 conceptual"></div>
    
      
        <div class="codewrapper">
          <pre><code class="lang-csharp hljs">public void GetData&lt;T&gt;(T[] data)

    where T : struct</code></pre>
        </div>
      
      
      
      
      
      <div class="type-subheader">
        <strong>Type Parameters</strong>
        <table class="">
            <tr>
              <td><span class="parametername">T</span></td>
              <td></td>
            </tr>
        </table>
      </div>
      
      <div class="type-subheader">
        <strong>Parameters</strong>
        <table class="">
            <tr>
              <td>T[]</td>
              <td><span class="parametername">data</span></td>
              <td></td>
            </tr>
        </table>
      </div>
      
      
      
    
    
    
    
    

  </div>
</article>
