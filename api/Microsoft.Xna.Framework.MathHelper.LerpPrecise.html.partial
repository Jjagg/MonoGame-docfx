

<article id="content" data-uid="Microsoft.Xna.Framework.MathHelper.LerpPrecise*" role="main" class="pos-rel">
  <h1 id="Microsoft_Xna_Framework_MathHelper_LerpPrecise_" data-uid="Microsoft.Xna.Framework.MathHelper.LerpPrecise*" class="text-break">MathHelper.LerpPrecise(Single, Single, Single) Method</h1>

  <div class="api">
    <div class="markdown level0 summary"></div>
<div class="markdown level0 conceptual"></div>

  
  
  
  
  
  
  
  
  
  




    <div class="markdown level0 summary"><p>Linearly interpolates between two values.
This method is a less efficient, more precise version of <a class="xref" href="Microsoft.Xna.Framework.MathHelper.Lerp.html#Microsoft_Xna_Framework_MathHelper_Lerp_System_Single_System_Single_System_Single_">Lerp(Single, Single, Single)</a>.
See remarks for more info.</p>
</div>
    <div class="markdown level0 conceptual"></div>
    
      
        <div class="codewrapper">
          <pre><code class="lang-csharp hljs">public static float LerpPrecise(float value1, float value2, float amount)</code></pre>
        </div>
      
      
      
      
      
      
      <div class="type-subheader">
        <strong>Parameters</strong>
        <table class="">
            <tr>
              <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.single">Single</a></td>
              <td><span class="parametername">value1</span></td>
              <td><p>Source value.</p>
</td>
            </tr>
            <tr>
              <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.single">Single</a></td>
              <td><span class="parametername">value2</span></td>
              <td><p>Destination value.</p>
</td>
            </tr>
            <tr>
              <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.single">Single</a></td>
              <td><span class="parametername">amount</span></td>
              <td><p>Value between 0 and 1 indicating the weight of value2.</p>
</td>
            </tr>
        </table>
      </div>
      
        <div class="type-subheader">
          <strong>Returns</strong>
          <table class="">
            <tr>
              <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.single">Single</a></td>
              <td><p>Interpolated value.</p>
</td>
            </tr>
          </table>
        </div>
      
      
    
    <h id="Microsoft_Xna_Framework_MathHelper_LerpPrecise_System_Single_System_Single_System_Single__remarks">Remarks</h>
    <div class="markdown level0 remarks"><p>This method performs the linear interpolation based on the following formula:</p>
<pre><code>((1 - amount) * value1) + (value2 * amount)</code></pre>.
<p>Passing amount a value of 0 will cause value1 to be returned, a value of 1 will cause value2 to be returned.
This method does not have the floating point precision issue that <a class="xref" href="Microsoft.Xna.Framework.MathHelper.Lerp.html#Microsoft_Xna_Framework_MathHelper_Lerp_System_Single_System_Single_System_Single_">Lerp(Single, Single, Single)</a> has.
i.e. If there is a big gap between value1 and value2 in magnitude (e.g. value1=10000000000000000, value2=1),
right at the edge of the interpolation range (amount=1), <a class="xref" href="Microsoft.Xna.Framework.MathHelper.Lerp.html#Microsoft_Xna_Framework_MathHelper_Lerp_System_Single_System_Single_System_Single_">Lerp(Single, Single, Single)</a> will return 0 (whereas it should return 1).
This also holds for value1=10^17, value2=10; value1=10^18,value2=10^2... so on.
For an in depth explanation of the issue, see below references:
Relevant Wikipedia Article: <a href="https://en.wikipedia.org/wiki/Linear_interpolation#Programming_language_support">https://en.wikipedia.org/wiki/Linear_interpolation#Programming_language_support</a>
Relevant StackOverflow Answer: <a href="http://stackoverflow.com/questions/4353525/floating-point-linear-interpolation#answer-23716956">http://stackoverflow.com/questions/4353525/floating-point-linear-interpolation#answer-23716956</a></p>
</div>
    
    
    
    

  </div>
</article>
