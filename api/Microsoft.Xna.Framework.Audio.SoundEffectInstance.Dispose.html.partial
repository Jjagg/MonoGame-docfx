

<article id="content" data-uid="Microsoft.Xna.Framework.Audio.SoundEffectInstance.Dispose*" role="main" class="pos-rel">
  <h1 id="Microsoft_Xna_Framework_Audio_SoundEffectInstance_Dispose_" data-uid="Microsoft.Xna.Framework.Audio.SoundEffectInstance.Dispose*" class="text-break">Dispose Method</h1>

  <div class="api">
    <div class="markdown level0 summary"></div>
<div class="markdown level0 conceptual"></div>

  
  
  
  
  
  
  
  
  
  



  
    <h2 id="overloads">
      
  
  
    Overloads
  
  
    </h2>
    <div>
      <table class="nameValue api-table">
          <tr>
          <td class="member"><a class="xref" href="Microsoft.Xna.Framework.Audio.SoundEffectInstance.Dispose.html#Microsoft_Xna_Framework_Audio_SoundEffectInstance_Dispose">Dispose()</a></td>
          <td class="summary"><p>Releases the resources held by this <a class="xref" href="Microsoft.Xna.Framework.Audio.SoundEffectInstance.html">SoundEffectInstance</a>.</p>
</td>
          </tr>
          <tr>
          <td class="member"><a class="xref" href="Microsoft.Xna.Framework.Audio.SoundEffectInstance.Dispose.html#Microsoft_Xna_Framework_Audio_SoundEffectInstance_Dispose_System_Boolean_">Dispose(Boolean)</a></td>
          <td class="summary"><p>Releases the resources held by this <a class="xref" href="Microsoft.Xna.Framework.Audio.SoundEffectInstance.html">SoundEffectInstance</a>.</p>
</td>
          </tr>
      </table>
    </div>

      <h2 id="Microsoft_Xna_Framework_Audio_SoundEffectInstance_Dispose" data-uid="Microsoft.Xna.Framework.Audio.SoundEffectInstance.Dispose" class="text-break">.SoundEffectInstance.Dispose() Method</h2>
    <div class="markdown level0 summary"><p>Releases the resources held by this <a class="xref" href="Microsoft.Xna.Framework.Audio.SoundEffectInstance.html">SoundEffectInstance</a>.</p>
</div>
    <div class="markdown level0 conceptual"></div>
    
      
        <div class="codewrapper">
          <pre><code class="lang-csharp hljs">public void Dispose()</code></pre>
        </div>
      
      
      
      <div class="type-subheader implements">
        <strong>Implements</strong>
          <div><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.idisposable.dispose#System_IDisposable_Dispose">Dispose</a>()</div>
      </div>
      
      
      
      
      
      
    
    
    
    
    
      <h2 id="Microsoft_Xna_Framework_Audio_SoundEffectInstance_Dispose_System_Boolean_" data-uid="Microsoft.Xna.Framework.Audio.SoundEffectInstance.Dispose(System.Boolean)" class="text-break">.SoundEffectInstance.Dispose(Boolean) Method</h2>
    <div class="markdown level0 summary"><p>Releases the resources held by this <a class="xref" href="Microsoft.Xna.Framework.Audio.SoundEffectInstance.html">SoundEffectInstance</a>.</p>
</div>
    <div class="markdown level0 conceptual"></div>
    
      
        <div class="codewrapper">
          <pre><code class="lang-csharp hljs">protected virtual void Dispose(bool disposing)</code></pre>
        </div>
      
      
      
      
      
      
      <div class="type-subheader">
        <strong>Parameters</strong>
        <table class="">
            <tr>
              <td><a class="xref" href="https://docs.microsoft.com/dotnet/api/system.boolean">Boolean</a></td>
              <td><span class="parametername">disposing</span></td>
              <td><p>If set to <code>true</code>, Dispose was called explicitly.</p>
</td>
            </tr>
        </table>
      </div>
      
      
      
    
    <h id="Microsoft_Xna_Framework_Audio_SoundEffectInstance_Dispose_System_Boolean__remarks">Remarks</h>
    <div class="markdown level0 remarks"><p>If the disposing parameter is true, the Dispose method was called explicitly. This
means that managed objects referenced by this instance should be disposed or released as
required.  If the disposing parameter is false, Dispose was called by the finalizer and
no managed objects should be touched because we do not know if they are still valid or
not at that time.  Unmanaged resources should always be released.</p>
</div>
    
    
    
    

  </div>
</article>
